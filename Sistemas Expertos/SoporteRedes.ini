; ============================================================
; DEMO: DIAGNOSTICO DE RED EN CLIPS (FORWARD-CHAINING)
; ============================================================

; ---------- 1) PLANTILLA DE HECHOS DE ENTRADA ----------
; Representamos cada "observación" de la red como un hecho (obs)
; con un nombre (link, ip, ping-gateway, ping-dns, proxy, etc.)
; y un valor (up/down, asignada/ausente, ok/falla, on/off, ...).
(deftemplate obs
  (slot nombre)             ; qué medimos (e.g., link, ip, ping-gateway)
  (slot valor))             ; resultado (e.g., up/down, ok/falla)

; También representamos "causas" diagnosticadas y "acciones" sugeridas.
(deftemplate causa (slot nombre))
(deftemplate accion (slot nombre))

; ---------- 2) REGLAS DE DIAGNOSTICO (CAUSAS) ----------
; NOTA: Usamos 'salience' para priorizar el orden de disparo:
; - Primero diagnosticamos CAUSAS (salience más alta),
; - Luego generamos ACCIONES (salience más baja).

; Regla: Si no hay enlace (link=down), la causa probable es "cable/desconexión".
(defrule r-causa-cable
  (declare (salience 30))                   ; alta prioridad: falla física
  (obs (nombre link) (valor down))
  =>
  (assert (causa (nombre cable)))
  (printout t "[Causa] Enlace fisico caido (cable/desconexion)." crlf))

; Regla: Si hay enlace (up) pero IP ausente -> problema de DHCP.
(defrule r-causa-dhcp
  (declare (salience 25))
  (obs (nombre link) (valor up))
  (obs (nombre ip)   (valor ausente))
  =>
  (assert (causa (nombre dhcp)))
  (printout t "[Causa] Sin direccion IP: posible DHCP." crlf))

; Regla: Hay enlace e IP asignada pero no se llega al gateway -> gateway/routers.
(defrule r-causa-gateway
  (declare (salience 25))
  (obs (nombre link)          (valor up))
  (obs (nombre ip)            (valor asignada))
  (obs (nombre ping-gateway)  (valor falla))
  =>
  (assert (causa (nombre gateway)))
  (printout t "[Causa] No responde gateway: posible router/segmento." crlf))

; Regla: Gateway OK pero DNS falla -> problema de DNS.
(defrule r-causa-dns
  (declare (salience 25))
  (obs (nombre ping-gateway)  (valor ok))
  (obs (nombre ping-dns)      (valor falla))
  =>
  (assert (causa (nombre dns)))
  (printout t "[Causa] DNS no responde/resuelve." crlf))

; Regla extra (opcional): Si DNS falla y proxy ON, priorizar revisar proxy.
(defrule r-causa-proxy
  (declare (salience 26))     ; un poco más que DNS para priorizar
  (obs (nombre ping-gateway)  (valor ok))
  (obs (nombre ping-dns)      (valor falla))
  (obs (nombre proxy)         (valor on))
  =>
  (assert (causa (nombre proxy)))
  (printout t "[Causa] DNS falla con PROXY activo: revisar proxy/config." crlf))

; ---------- 3) REGLAS DE PLAN DE ACCION ----------
; Estas reglas leen las CAUSAS y proponen ACCIONES (y explican el porqué).

(defrule r-plan-cable
  (declare (salience 10))
  (causa (nombre cable))
  =>
  (assert (accion (nombre "Verificar cable/puerto; reconectar; probar otro cable")))
  (printout t "[Plan] Verificar cable o puerto de red. " crlf))

(defrule r-plan-dhcp
  (declare (salience 10))
  (causa (nombre dhcp))
  =>
  (assert (accion (nombre "Renovar DHCP o revisar servidor DHCP")))
  (printout t "[Plan] Renovar DHCP (ipconfig /renew) o revisar servidor DHCP." crlf))

(defrule r-plan-gateway
  (declare (salience 10))
  (causa (nombre gateway))
  =>
  (assert (accion (nombre "Reiniciar router/switch o revisar ruta default")))
  (printout t "[Plan] Verificar router/gateway, rutas y conectividad del segmento." crlf))

(defrule r-plan-dns
  (declare (salience 10))
  (causa (nombre dns))
  =>
  (assert (accion (nombre "Cambiar/validar DNS (8.8.8.8), revisar resolucion")))
  (printout t "[Plan] Probar DNS alternativo y revisar resolucion." crlf))

(defrule r-plan-proxy
  (declare (salience 10))
  (causa (nombre proxy))
  =>
  (assert (accion (nombre "Desactivar/ajustar proxy; probar sin proxy")))
  (printout t "[Plan] Desactivar o ajustar el proxy; probar navegacion directa." crlf))

; ---------- 4) REGLA DE RESUMEN (OPCIONAL) ----------
; Si hay al menos una ACCION propuesta, imprime un cierre amigable.
(defrule r-resumen
  (declare (salience 5))
  (accion (nombre ?a))
  =>
  (printout t "==> Sugerencias listas. Revise las acciones arriba." crlf))

; ============================================================
; FIN DEL CONOCIMIENTO (REGLAS). A CONTINUACION, EJECUCION.
; ============================================================

; CONSEJOS DE USO EN CONSOLA:
; (watch rules)   ; ver disparos de reglas
; (watch facts)   ; ver insercion de hechos
; (reset)         ; prepara el entorno (limpia y carga deffacts si hubiera)
; (assert ...)    ; inyecta observaciones del caso
; (run)           ; ejecuta encadenamiento hacia adelante

(reset)
(assert (obs (nombre link) (valor down)))
(run)

(reset)
(assert (obs (nombre link) (valor up)))
(assert (obs (nombre ip)   (valor ausente)))
(run)

(reset)
(assert (obs (nombre link)         (valor up)))
(assert (obs (nombre ip)           (valor asignada)))
(assert (obs (nombre ping-gateway) (valor falla)))
(run)

(reset)
(assert (obs (nombre link)         (valor up)))
(assert (obs (nombre ip)           (valor asignada)))
(assert (obs (nombre ping-gateway) (valor ok)))
(assert (obs (nombre ping-dns)     (valor falla)))
(run) 

(reset)
(assert (obs (nombre link)         (valor up)))
(assert (obs (nombre ip)           (valor asignada)))
(assert (obs (nombre ping-gateway) (valor ok)))
(assert (obs (nombre ping-dns)     (valor falla)))
(assert (obs (nombre proxy)        (valor on)))
(run)



